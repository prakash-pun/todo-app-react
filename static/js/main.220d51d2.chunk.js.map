{"version":3,"sources":["redux/todo/todoTypes.ts","redux/todo/todoReducer.ts","redux/store.ts","components/TodoListItem.tsx","redux/selector.ts","redux/todo/todoAction.ts","hooks/useTodo.ts","redux/thunks.ts","task.svg","components/TodoIcon.tsx","components/NewTodo.tsx","logo.svg","components/Loading.tsx","components/TodoList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CREATE_TODO","REMOVE_TODO","MARK_TODO_AS_COMPLETED","LOAD_TODOS_IN_PROGRESS","LOAD_TODOS_SUCCESS","LOAD_TODOS_FAILURE","initialState","isLoading","todos","store","createStore","state","action","type","newTodo","payload","concat","removeTodo","filter","todo","_id","updatedTodo","map","composeWithDevTools","applyMiddleware","thunk","TodoListItem","onCompletedPressed","className","isCompleted","defaultChecked","onClick","text","getTodos","getIncompleteTodos","createSelector","getCompletedTodos","createTodo","loadTodosSuccess","useTodo","useSelector","shallowEqual","getTodosLoading","incompleteTodos","completeTodos","dispatch","useDispatch","addTodo","useCallback","a","body","JSON","stringify","fetch","headers","method","response","json","console","log","fetchTodos","axios","get","data","useEffect","useState","setTodo","deleteTodo","id","removedTodo","completeTodo","e","currentTarget","value","preventDefault","TodoIcon","src","task","alt","NewTodo","handleTodoData","onSubmit","placeholder","onChange","disabled","Loading","logo","TodoList","addNewTodo","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.220d51d2.chunk.js","sourcesContent":["export const CREATE_TODO = \"CREATE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const MARK_TODO_AS_COMPLETED = \"MARK_TODO_AS_COMPLETED\";\nexport const LOAD_TODOS_IN_PROGRESS = \"LOAD_TODOS_IN_PROGRESS\";\nexport const LOAD_TODOS_SUCCESS = \"LOAD_TODOS_SUCCESS\";\nexport const LOAD_TODOS_FAILURE = \"LOAD_TODOS_FAILURE\";\n","import {\n  CREATE_TODO,\n  REMOVE_TODO,\n  MARK_TODO_AS_COMPLETED,\n  LOAD_TODOS_IN_PROGRESS,\n  LOAD_TODOS_SUCCESS,\n  LOAD_TODOS_FAILURE,\n} from \"./todoTypes\";\n\nconst initialState: TodoState = { isLoading: false, todos: [] };\n\nexport const todos = (state = initialState, action: any): TodoState => {\n  switch (action.type) {\n    case CREATE_TODO:\n      const newTodo: ITodo = action.payload;\n      return {\n        ...state,\n        todos: state.todos.concat(newTodo),\n      };\n\n    case REMOVE_TODO:\n      const removeTodo: ITodo[] = state.todos.filter(\n        (todo) => todo._id !== action.payload._id\n      );\n\n      return {\n        ...state,\n        todos: removeTodo,\n      };\n\n    case MARK_TODO_AS_COMPLETED:\n      const { todo: updatedTodo } = action.payload;\n\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo._id === updatedTodo._id) {\n            return updatedTodo;\n          }\n          return todo;\n        }),\n      };\n\n    case LOAD_TODOS_SUCCESS:\n      return {\n        ...state,\n        todos: action.payload,\n        isLoading: false,\n      };\n\n    case LOAD_TODOS_IN_PROGRESS:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case LOAD_TODOS_FAILURE:\n      return {\n        ...state,\n        todos: [],\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, Store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { todos } from \"./todo/todoReducer\";\n\nconst store: Store<TodoState, TodoAction> & {\n  dispatch: DispatchType;\n} = createStore(todos, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport \"./style.css\";\n\ntype Props = {\n  todo: ITodo;\n  removeTodo: (todo: ITodo) => void;\n  onCompletedPressed: (todo: ITodo) => void;\n};\n\nconst TodoListItem: React.FC<Props> = ({\n  todo,\n  removeTodo,\n  onCompletedPressed,\n}) => {\n  return (\n    <div className=\"todo-item-container\">\n      <div className=\"todo-content\">\n        {todo.isCompleted ? (\n          <input className=\"todo-content-box\" type=\"checkbox\" defaultChecked />\n        ) : (\n          <input\n            className=\"todo-content-box\"\n            type=\"checkbox\"\n            onClick={() => onCompletedPressed(todo)}\n          />\n        )}\n\n        <h3 className=\"todo-content-title\">{todo.text}</h3>\n      </div>\n      <div className=\"remove-content\">\n        <button className=\"remove-button\" onClick={() => removeTodo(todo)}>\n          <AiFillDelete />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoListItem;\n","import { createSelector } from \"reselect\";\n\nexport const getTodos = (state: TodoState) => state.todos;\n\nexport const getTodosLoading = (state: TodoState) => state.isLoading;\n\nexport const getIncompleteTodos = createSelector(getTodos, (todos) =>\n  todos.filter((todo) => !todo.isCompleted)\n);\n\nexport const getCompletedTodos = createSelector(getTodos, (todos) => {\n  return todos.filter((todo) => todo.isCompleted);\n});\n","import {\n  CREATE_TODO,\n  REMOVE_TODO,\n  MARK_TODO_AS_COMPLETED,\n  LOAD_TODOS_IN_PROGRESS,\n  LOAD_TODOS_SUCCESS,\n  LOAD_TODOS_FAILURE,\n} from \"./todoTypes\";\n\nexport const createTodo = (todo: ITodo) => ({\n  type: CREATE_TODO,\n  payload: todo,\n});\n\nexport const removeTodo = (todo: ITodo) => ({\n  type: REMOVE_TODO,\n  payload: todo,\n});\n\nexport const markTodoAsCompleted = (todo: ITodo) => ({\n  type: MARK_TODO_AS_COMPLETED,\n  payload: { todo },\n});\n\nexport const loadTodosInProgress = () => ({\n  type: LOAD_TODOS_IN_PROGRESS,\n});\n\nexport const loadTodosSuccess = (todos: any) => {\n  return {\n    type: LOAD_TODOS_SUCCESS,\n    payload: todos,\n  };\n};\n\nexport const loadTodosFailure = () => ({\n  type: LOAD_TODOS_FAILURE,\n});\n","import { useCallback, useEffect, useState } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport {\n  getCompletedTodos,\n  getIncompleteTodos,\n  getTodosLoading,\n} from \"../redux/selector\";\nimport {\n  addTodoRequest,\n  loadTodos,\n  markTodoAsCompletedRequest,\n  removeTodoRequest,\n} from \"../redux/thunks\";\n\nconst useTodo = () => {\n  const todos: readonly ITodo[] = useSelector(\n    (state: TodoState) => state.todos,\n    shallowEqual\n  );\n\n  const isLoading: boolean = useSelector((state: TodoState) =>\n    getTodosLoading(state)\n  );\n\n  const incompleteTodos: readonly ITodo[] = useSelector((state: TodoState) =>\n    getIncompleteTodos(state)\n  );\n\n  const completeTodos: readonly ITodo[] = useSelector((state: TodoState) =>\n    getCompletedTodos(state)\n  );\n\n  const dispatch: Dispatch<any> = useDispatch();\n\n  const addTodo = useCallback(\n    (todo: ITodo) => dispatch(addTodoRequest(todo.text)),\n    [dispatch]\n  );\n\n  const fetchTodos = useCallback(() => dispatch(loadTodos()), [dispatch]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, [fetchTodos]);\n\n  const [todo, setTodo] = useState<any | {}>();\n\n  const handleTodoData = (e: React.FormEvent<HTMLInputElement>) => {\n    setTodo({\n      ...todo,\n      [e.currentTarget.id]: e.currentTarget.value,\n    });\n  };\n\n  const addNewTodo = (e: React.FormEvent) => {\n    e.preventDefault();\n    addTodo(todo);\n    setTodo(\"\");\n  };\n\n  const deleteTodo = useCallback(\n    (todo: ITodo) => dispatch(removeTodoRequest(todo._id)),\n    [dispatch]\n  );\n\n  const completeTodo = useCallback(\n    (todo: ITodo) => dispatch(markTodoAsCompletedRequest(todo._id)),\n    [dispatch]\n  );\n\n  return [\n    todos,\n    isLoading,\n    incompleteTodos,\n    completeTodos,\n    todo,\n    handleTodoData,\n    addNewTodo,\n    deleteTodo,\n    completeTodo,\n  ];\n};\n\nexport default useTodo;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  createTodo,\n  removeTodo,\n  markTodoAsCompleted,\n  loadTodosFailure,\n  loadTodosInProgress,\n  loadTodosSuccess,\n} from \"./todo/todoAction\";\n\nexport const loadTodos = () => async (dispatch: Dispatch) => {\n  try {\n    dispatch(loadTodosInProgress());\n    const response = await axios.get(\"http://localhost:8080/todos\");\n    const todos = response.data;\n    dispatch(loadTodosSuccess(todos));\n  } catch (e) {\n    dispatch(loadTodosFailure());\n  }\n};\n\nexport const addTodoRequest = (text: string) => async (dispatch: Dispatch) => {\n  try {\n    const body = JSON.stringify({ text });\n    const response = await fetch(\"http://localhost:8080/new\", {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body,\n    });\n    const todo = await response.json();\n    dispatch(createTodo(todo));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const removeTodoRequest = (id: string) => async (dispatch: Dispatch) => {\n  try {\n    const response = await fetch(`http://localhost:8080/todos/${id}`, {\n      method: \"DELETE\",\n    });\n    const removedTodo = await response.json();\n    dispatch(removeTodo(removedTodo));\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const markTodoAsCompletedRequest =\n  (id: string) => async (dispatch: Dispatch) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/todos/${id}/completed`,\n        {\n          method: \"POST\",\n        }\n      );\n      const updatedTodo = await response.json();\n      dispatch(markTodoAsCompleted(updatedTodo));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\nexport const displayAlert = (text: string) => () => {\n  alert(`You clicked on: ${text}`);\n};\n","export default __webpack_public_path__ + \"static/media/task.f2539378.svg\";","import task from \"../task.svg\";\nimport \"./style.css\";\n\nconst TodoIcon = () => {\n  return (\n    <div className=\"icon-container\">\n      <img src={task} className=\"task-icon\" alt=\"task\" />\n    </div>\n  );\n};\n\nexport default TodoIcon;\n","import React from \"react\";\nimport \"./style.css\";\n\ntype Props = {\n  todo: ITodo;\n  handleTodoData: any;\n  addTodo: (todo: ITodo | any) => void;\n};\n\nconst NewTodo: React.FC<Props> = ({ todo, handleTodoData, addTodo }) => {\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={addTodo}>\n        <input\n          className=\"todo-input\"\n          type=\"text\"\n          id=\"text\"\n          placeholder=\"Add a task\"\n          onChange={handleTodoData}\n        />\n        <button disabled={!todo} className=\"new-todo-button\">\n          Create Todo\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewTodo;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from \"../logo.svg\";\nimport \"../App.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"icon-container\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport TodoListItem from \"./TodoListItem\";\nimport useTodo from \"../hooks/useTodo\";\nimport TodoIcon from \"./TodoIcon\";\nimport NewTodo from \"./NewTodo\";\nimport Loading from \"./Loading\";\nimport \"./style.css\";\n\nconst TodoList: React.FC = () => {\n  const [\n    todos,\n    isLoading,\n    incompleteTodos,\n    completeTodos,\n    todo,\n    handleTodoData,\n    addNewTodo,\n    deleteTodo,\n    completeTodo,\n  ] = useTodo();\n\n  return (\n    <div className=\"main-container\">\n      <NewTodo\n        todo={todo}\n        handleTodoData={handleTodoData}\n        addTodo={addNewTodo}\n      />\n      <div className=\"task-heading\">\n        <h2>My Task</h2>\n      </div>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <div className=\"todo-container\">\n            {todos.length <= 0 ? (\n              <TodoIcon />\n            ) : (\n              incompleteTodos.map((todo: ITodo) => (\n                <TodoListItem\n                  key={todo._id}\n                  todo={todo}\n                  removeTodo={deleteTodo}\n                  onCompletedPressed={completeTodo}\n                />\n              ))\n            )}\n          </div>\n          {completeTodos.length > 0 ? (\n            <div className=\"todo-container\">\n              <h3 className=\"complete\">Completed</h3>\n              {completeTodos.map((todo: ITodo) => (\n                <TodoListItem\n                  key={todo._id}\n                  todo={todo}\n                  removeTodo={deleteTodo}\n                  onCompletedPressed={completeTodo}\n                />\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <TodoList />\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}